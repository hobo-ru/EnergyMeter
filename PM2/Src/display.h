#ifndef DISPLAY_H
#define DISPLAY_H


#include <stdint.h>
#include <stdbool.h>

#define DISLAY_MODE_AUTO        0
#define DISLAY_MODE_MANUAL      1
#define DISPLAY_MODE_TIMEOUT    15
#define DRAW_SAME_SCREEN_CMD        0xff

#define DISPLAY_SHOW_TIME       7

#define DEFAULT_AUTO_DISPLAY 0x180888F

#define EOL     0xfe
#define EOS     0xff
#define NO_MENU_ITEM 0xff

#define  BLUE_BUTTON_CLICK      0
#define  RED_BUTTON_CLICK       1
#define  BLUE_BUTTON_LONG       2
#define  RED_BUTTON_LONG        3

extern bool Display_Mode;
extern uint32_t display_auto_timer;
extern void Display_Init( void );

extern bool Display_IsOn( void );

extern void Display_SetOn(void);
extern void Display_SetOff(void);

//extern void Display_Draw( void );
void Display_Set_Mode(bool mode);
bool Display_Draw( uint8_t Screen );
void Display_Auto_Main();
void Display_Show_Auto_Next();
void Display_Show_Manual(uint8_t key);
//extern void Display_SetNextScreen( void );
//extern void Display_SetFullDisplay( void );
//extern void Display_SetNormalDisplay( void );

//extern void Display_ReleaseCom(void);
//extern void Display_RestoreCom(void);
void black_screen(uint32_t);


#define flash_error_width 14
#define flash_error_height 14
static  const unsigned char flash_error_bits[] = {
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff,
   0xff, 0xff, 0xff, 0xff };


#define unlock_width 14
#define unlock_height 14
static  const unsigned char unlock_bits[] = {
   0x00, 0x0e, 0x00, 0x1f, 0x80, 0x3b, 0xc0, 0x31, 0xc0, 0x20, 0x00, 0x00,
   0xfe, 0x03, 0xff, 0x07, 0xff, 0x07, 0xff, 0x07, 0xff, 0x07, 0xff, 0x07,
   0xff, 0x07, 0xfe, 0x03 };

#define magnet_width 14
#define magnet_height 14

static unsigned char magnet_bits[] = {
   0xe0, 0x3f, 0xf0, 0x23, 0xf8, 0x3f, 0x7c, 0x00, 0x3e, 0x00, 0x1f, 0x00,
   0x0f, 0x00, 0x0f, 0x00, 0x0f, 0x00, 0x1f, 0x00, 0x3e, 0x00, 0xfc, 0x3f,
   0xf8, 0x23, 0xf0, 0x3f };


#define wrench_width 14
#define wrench_height 14

static const unsigned char wrench_bits[] = {
   0x00, 0x07, 0x80, 0x03, 0xc0, 0x01, 0xc0, 0x21, 0xc0, 0x33, 0xc0, 0x3f,
   0xe0, 0x1f, 0xf0, 0x0f, 0xf8, 0x00, 0x7c, 0x00, 0x3e, 0x00, 0x1f, 0x00,
   0x0d, 0x00, 0x07, 0x00 };


#define wifi_width 21
#define wifi_height 14
static const unsigned char wifi_bits[] = {
   0x80, 0x3f, 0x00, 0xf0, 0xff, 0x01, 0xfc, 0xfb, 0x07, 0x7e, 0xc0, 0x0f,
   0x1f, 0x00, 0x1f, 0x0e, 0x1f, 0x0e, 0xc4, 0x7f, 0x04, 0xe0, 0xfb, 0x00,
   0xf0, 0xe0, 0x01, 0x20, 0x80, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x1f, 0x00,
   0x00, 0x0e, 0x00, 0x00, 0x04, 0x00 };

#define exclamation_width 14
#define exclamation_height 14
static const unsigned char exclamation_bits[] = {
   0xf0, 0x07, 0x0c, 0x08, 0x06, 0x18, 0xc2, 0x10, 0xc1, 0x20, 0xc1, 0x20,
   0xc1, 0x20, 0xc1, 0x20, 0x01, 0x20, 0x01, 0x20, 0xc1, 0x20, 0x06, 0x18,
   0x0c, 0x08, 0xf0, 0x07 };

#define limit_width 14
#define limit_height 14
static const unsigned char limit_bits[] = {
   0xf8, 0x03, 0x0c, 0x0f, 0x36, 0x18, 0x02, 0x30, 0x33, 0x30, 0x31, 0x30,
   0x31, 0x30, 0x33, 0x30, 0x33, 0x20, 0xf3, 0x23, 0xf3, 0x33, 0x06, 0x18,
   0x1c, 0x0f, 0xf0, 0x07 };


#define off_width 14
#define off_height 14
static const unsigned char off_bits[] = {
   0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x06, 0x00, 0x07,
   0x80, 0x03, 0xc0, 0x01, 0xe0, 0x00, 0x70, 0x0c, 0x3f, 0x3c, 0x1f, 0x3c,
   0x00, 0x00, 0x00, 0x00 };

#define pulse_width 11
#define pulse_height 14
static const unsigned char pulse_bits[] = {
   0x40, 0x00, 0x40, 0x00, 0xc0, 0x00, 0xc0, 0x00, 0xe0, 0x00, 0xe0, 0x00,
   0xa0, 0x00, 0xaf, 0x07, 0xaf, 0x07, 0x38, 0x00, 0x38, 0x00, 0x38, 0x00,
   0x18, 0x00, 0x10, 0x00 };

#define back_width 18
#define back_height 14
static const unsigned char back_bits[] = {
   0x01, 0x1e, 0x00, 0xc3, 0x7f, 0x00, 0xe7, 0xff, 0x00, 0xff, 0xff, 0x01,
   0xff, 0xff, 0x03, 0xff, 0xc3, 0x03, 0xff, 0x80, 0x03, 0xff, 0x80, 0x03,
   0xff, 0x81, 0x03, 0xff, 0x83, 0x03, 0xff, 0xc7, 0x01, 0x00, 0xc0, 0x00,
   0x00, 0x60, 0x00, 0x00, 0x20, 0x00 };

#endif
